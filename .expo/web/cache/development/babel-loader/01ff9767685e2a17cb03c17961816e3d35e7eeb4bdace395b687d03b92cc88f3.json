{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PhoneVerificationScreen = function PhoneVerificationScreen() {\n  var _useState = useState(['', '', '', '', '', '']),\n    _useState2 = _slicedToArray(_useState, 2),\n    verificationCode = _useState2[0],\n    setVerificationCode = _useState2[1];\n  var codeInputs = Array.from({\n    length: 6\n  }, function () {\n    return useRef(null);\n  });\n  var handleInput = function handleInput(index, value) {\n    setVerificationCode(function (prevCode) {\n      var newCode = _toConsumableArray(prevCode);\n      newCode[index] = value;\n      if (index < 5 && value !== '') {\n        var nextInput = codeInputs[index + 1].current;\n        if (nextInput) {}\n      }\n      return newCode;\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.backIcon,\n      children: _jsxs(View, {\n        style: styles.backIconContainer,\n        children: [_jsx(Icon, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#2B0100\"\n        }), _jsx(Text, {\n          style: styles.backText,\n          children: \"Back\"\n        })]\n      })\n    }), _jsx(Text, {\n      style: styles.headerText,\n      children: \"Phone Verification\"\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Image, {\n        source: require(\"../../../assets/logo/verification.png\"),\n        style: styles.image\n      })\n    }), _jsxs(Text, {\n      style: styles.subText,\n      children: [\"Enter the OPT sent to \", _jsx(Text, {\n        style: styles.phoneText,\n        children: \"+880 2568963123\"\n      })]\n    }), _jsx(View, {\n      style: styles.codeInputContainer,\n      children: codeInputs.map(function (ref, index) {\n        return _jsx(TextInput, {\n          ref: ref,\n          style: [styles.codeInput, index === 0 ? null : styles.spaceBetween, styles.borderBottom],\n          value: verificationCode[index],\n          onChangeText: function onChangeText(value) {\n            return handleInput(index, value);\n          },\n          keyboardType: \"number-pad\",\n          maxLength: 1\n        }, index);\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.verify,\n      children: _jsxs(Text, {\n        style: styles.verifyButtonText,\n        children: [\"Don't receive the OTP? \", _jsx(Text, {\n          style: styles.resendOpt,\n          children: \"Resend OPT\"\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  phoneText: {\n    fontWeight: \"700\"\n  },\n  image: {\n    marginBottom: 50\n  },\n  backIcon: {\n    position: 'absolute',\n    top: 70,\n    left: 10\n  },\n  backIconContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  backText: {\n    fontSize: 16,\n    color: '#2B0100',\n    marginLeft: 5\n  },\n  headerText: {\n    fontSize: 27,\n    fontWeight: '500',\n    marginBottom: 20\n  },\n  subText: {\n    color: '#848282',\n    marginBottom: 30,\n    textAlign: 'center'\n  },\n  codeInputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    paddingHorizontal: 20\n  },\n  codeInput: {\n    flex: 1,\n    height: 50,\n    paddingHorizontal: 10,\n    textAlign: 'center'\n  },\n  borderBottom: {\n    borderBottomWidth: 1,\n    borderColor: '#ccc'\n  },\n  spaceBetween: {\n    marginLeft: 10\n  },\n  verify: {\n    marginTop: 30\n  },\n  resendOpt: {\n    color: \"#F29F05\"\n  },\n  verifyButtonText: {\n    color: \"#777777\"\n  }\n});\nexport default PhoneVerificationScreen;","map":{"version":3,"names":["React","useState","useRef","View","Text","TextInput","TouchableOpacity","StyleSheet","Image","Icon","jsx","_jsx","jsxs","_jsxs","PhoneVerificationScreen","_useState","_useState2","_slicedToArray","verificationCode","setVerificationCode","codeInputs","Array","from","length","handleInput","index","value","prevCode","newCode","_toConsumableArray","nextInput","current","style","styles","container","children","backIcon","backIconContainer","name","size","color","backText","headerText","source","require","image","subText","phoneText","codeInputContainer","map","ref","codeInput","spaceBetween","borderBottom","onChangeText","keyboardType","maxLength","verify","verifyButtonText","resendOpt","create","flex","alignItems","justifyContent","padding","fontWeight","marginBottom","position","top","left","flexDirection","fontSize","marginLeft","textAlign","width","paddingHorizontal","height","borderBottomWidth","borderColor","marginTop"],"sources":["/Users/rodwellshibambu/Documents/resapp/Fudu App/src/screen/accounts/PhoneVerication.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet,Image } from 'react-native';\nimport Icon from 'react-native-vector-icons/Ionicons';\n\nconst PhoneVerificationScreen = () => {\n  const [verificationCode, setVerificationCode] = useState(['', '', '', '', '', '']);\n  const codeInputs = Array.from({ length: 6 }, () => useRef(null));\n\n  const handleInput = (index: number, value: string) => {\n    setVerificationCode((prevCode) => {\n      const newCode = [...prevCode];\n      newCode[index] = value;\n\n      if (index < 5 && value !== '') {\n        const nextInput = codeInputs[index + 1].current;\n        if (nextInput) {\n          // nextInput.focus();\n        }\n      }\n\n      return newCode;\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.backIcon}>\n        <View style={styles.backIconContainer}>\n          <Icon name=\"arrow-back\" size={24} color=\"#2B0100\" />\n          <Text style={styles.backText}>Back</Text>\n        </View>\n      </TouchableOpacity>\n      <Text style={styles.headerText}>Phone Verification</Text>\n      <TouchableOpacity>\n      <Image source={require('../../../assets/logo/verification.png')} style={styles.image} />\n      </TouchableOpacity>\n     \n      <Text style={styles.subText}>Enter the OPT sent to <Text style={styles.phoneText}>+880 2568963123</Text></Text>\n      <View style={styles.codeInputContainer}>\n        {codeInputs.map((ref, index) => (\n          <TextInput\n            key={index}\n            ref={ref}\n            style={[\n              styles.codeInput,\n              index === 0 ? null : styles.spaceBetween,\n              styles.borderBottom,\n            ]}\n            value={verificationCode[index]}\n            onChangeText={(value) => handleInput(index, value)}\n            keyboardType=\"number-pad\"\n            maxLength={1}\n          />\n        ))}\n      </View>\n      <TouchableOpacity style={styles.verify}>\n        <Text style={styles.verifyButtonText}>Don't receive the OTP? <Text style={styles.resendOpt}>Resend OPT</Text></Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  phoneText: {\n    fontWeight:\"700\"\n  },\n  image: {\n    marginBottom: 50,\n  },\n  backIcon: {\n    position: 'absolute',\n    top: 70,\n    left: 10,\n  },\n  backIconContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  backText: {\n    fontSize: 16,\n    color: '#2B0100',\n    marginLeft: 5,\n  },\n  headerText: {\n    fontSize: 27,\n    fontWeight: '500',\n    marginBottom: 20,\n  },\n  subText: {\n    color: '#848282',\n    marginBottom: 30,\n    textAlign: 'center',\n  },\n  codeInputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    paddingHorizontal: 20,\n  },\n  codeInput: {\n    flex: 1,\n    height: 50,\n    paddingHorizontal: 10,\n    textAlign: 'center',\n  },\n  borderBottom: {\n    borderBottomWidth: 1,\n    borderColor: '#ccc',\n  },\n  spaceBetween: {\n    marginLeft: 10,\n  },\n  verify: {\n    marginTop:30\n  },\n\n  resendOpt: {\n    color:\"#F29F05\",\n    \n  },\n  verifyButtonText: {\n      color:\"#777777\"\n  },\n});\n\nexport default PhoneVerificationScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { resetPassword } from \"../../../redux/Actions/auth.Actions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ResetPasswordScreen = function ResetPasswordScreen() {\n  var dispatch = useDispatch();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    confirmPassword = _useState4[0],\n    setConfirmPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    passwordError = _useState6[0],\n    setPasswordError = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showPassword = _useState8[0],\n    setShowPassword = _useState8[1];\n  var _useSelector = useSelector(function (state) {\n      return state == null ? void 0 : state.auth;\n    }),\n    resetPasswordLoading = _useSelector.resetPasswordLoading,\n    error = _useSelector.error;\n  var handleResetPassword = function handleResetPassword() {\n    if (password === \"\" || confirmPassword === \"\") {\n      setPasswordError(true);\n      return;\n    }\n    if (password !== confirmPassword) {\n      setPasswordError(true);\n      return;\n    }\n    dispatch(resetPassword(password, confirmPassword));\n    console.log(\"New password:\", password);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \"Reset Password\"\n    }), _jsx(Text, {\n      style: styles.subTitle,\n      children: \"Enter your new password\"\n    }), _jsx(TextInput, {\n      style: [styles.input, passwordError ? styles.inputError : null],\n      placeholder: \"New Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: function onChangeText(text) {\n        setPassword(text);\n        setPasswordError(false);\n      }\n    }), _jsx(TextInput, {\n      style: [styles.input, passwordError ? styles.inputError : null],\n      placeholder: \"Confirm Password\",\n      secureTextEntry: true,\n      value: confirmPassword,\n      onChangeText: function onChangeText(text) {\n        setConfirmPassword(text);\n        setPasswordError(false);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.resetButton,\n      onPress: handleResetPassword,\n      children: resetPasswordLoading ? _jsx(ActivityIndicator, {\n        color: \"white\",\n        size: \"small\"\n      }) : _jsx(Text, {\n        style: styles.resetButtonText,\n        children: \"Reset Password\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20\n  },\n  headerText: {\n    fontSize: 27,\n    fontWeight: \"500\",\n    marginBottom: 20\n  },\n  subTitle: {\n    color: \"#848282\",\n    marginBottom: 50,\n    textAlign: \"center\"\n  },\n  input: {\n    width: \"100%\",\n    height: 50,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 10\n  },\n  inputError: {\n    borderColor: \"red\"\n  },\n  resetButton: {\n    borderRadius: 32,\n    width: \"100%\",\n    marginTop: 25,\n    padding: 20,\n    color: \"#2B0100\",\n    backgroundColor: \"#F29F05\"\n  },\n  resetButtonText: {\n    fontSize: 16,\n    textAlign: \"center\"\n  },\n  eyeIcon: {\n    position: \"absolute\",\n    right: 10\n  }\n});\nvar connector = connect(null, {\n  resetPassword: resetPassword\n});\nexport default connector(ResetPasswordScreen);","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","ActivityIndicator","connect","useDispatch","useSelector","resetPassword","jsx","_jsx","jsxs","_jsxs","ResetPasswordScreen","dispatch","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_useState5","_useState6","passwordError","setPasswordError","_useState7","_useState8","showPassword","setShowPassword","_useSelector","state","auth","resetPasswordLoading","error","handleResetPassword","console","log","style","styles","container","children","headerText","subTitle","input","inputError","placeholder","secureTextEntry","value","onChangeText","text","resetButton","onPress","color","size","resetButtonText","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","marginBottom","textAlign","width","height","borderWidth","borderColor","borderRadius","paddingHorizontal","marginTop","backgroundColor","eyeIcon","position","right","connector"],"sources":["C:/Users/Kwanda/dwhelper/Desktop/Project/Fudu%20App/src/screen/accounts/ResetPassword.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Switch,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\n//import { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { login, resetPassword } from \"../../../redux/Actions/auth.Actions\";\r\nimport { ILogin } from \"../../../core/login\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\n\r\nconst ResetPasswordScreen = () => {\r\n  const dispatch = useDispatch<ThunkDispatch<any, any, any>>();\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { resetPasswordLoading, error } = useSelector(\r\n    (state: any) => state?.auth\r\n  );\r\n\r\n  const handleResetPassword = () => {\r\n    //validation logic\r\n    if (password === \"\" || confirmPassword === \"\") {\r\n      setPasswordError(true);\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setPasswordError(true);\r\n      return;\r\n    }\r\n    dispatch(resetPassword(password, confirmPassword));\r\n    // Perform password reset logic here\r\n    console.log(\"New password:\", password);\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.headerText}>Reset Password</Text>\r\n      <Text style={styles.subTitle}>Enter your new password</Text>\r\n\r\n      <TextInput\r\n        style={[styles.input, passwordError ? styles.inputError : null]}\r\n        placeholder=\"New Password\"\r\n        secureTextEntry={true}\r\n        value={password}\r\n        onChangeText={(text) => {\r\n          setPassword(text);\r\n          setPasswordError(false);\r\n        }}\r\n      />\r\n\r\n      <TextInput\r\n        style={[styles.input, passwordError ? styles.inputError : null]}\r\n        placeholder=\"Confirm Password\"\r\n        secureTextEntry={true}\r\n        value={confirmPassword}\r\n        onChangeText={(text) => {\r\n          setConfirmPassword(text);\r\n          setPasswordError(false);\r\n        }}\r\n      />\r\n      <TouchableOpacity\r\n        style={styles.resetButton}\r\n        onPress={handleResetPassword}\r\n      >\r\n        {resetPasswordLoading ? (\r\n          <ActivityIndicator color=\"white\" size=\"small\" />\r\n        ) : (\r\n          <Text style={styles.resetButtonText}>Reset Password</Text>\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n  },\r\n  headerText: {\r\n    fontSize: 27,\r\n    fontWeight: \"500\",\r\n    marginBottom: 20,\r\n  },\r\n  subTitle: {\r\n    color: \"#848282\",\r\n    marginBottom: 50,\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    height: 50,\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 5,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 10,\r\n  },\r\n  inputError: {\r\n    borderColor: \"red\",\r\n  },\r\n  resetButton: {\r\n    borderRadius: 32,\r\n    width: \"100%\",\r\n    marginTop: 25,\r\n    padding: 20,\r\n    color: \"#2B0100\",\r\n    backgroundColor: \"#F29F05\",\r\n  },\r\n  resetButtonText: {\r\n    fontSize: 16,\r\n    textAlign: \"center\",\r\n  },\r\n  eyeIcon: {\r\n    position: \"absolute\",\r\n    right: 10,\r\n  },\r\n});\r\n\r\nconst connector = connect(null, { resetPassword });\r\n\r\nexport default connector(ResetPasswordScreen);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../../redux/Actions/auth.Actions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ForgottenPasswordScreen = function ForgottenPasswordScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    usernameError = _useState4[0],\n    setUsernameError = _useState4[1];\n  var handleForgettonPassword = function handleForgettonPassword() {\n    if (username === \"\") {\n      setUsernameError(true);\n      return;\n    }\n    console.log(\"send email to :\", username);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \" Forgotten Password \"\n    }), _jsx(Text, {\n      style: styles.subTitle,\n      children: \"Enter your username to reset your password\"\n    }), _jsx(TextInput, {\n      style: [styles.input, usernameError ? styles.inputError : null],\n      placeholder: \"Username\",\n      value: username,\n      onChangeText: function onChangeText(text) {\n        setUsername(text);\n        setUsernameError(false);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.forgottenButton,\n      onPress: handleForgettonPassword,\n      children: _jsx(Text, {\n        style: styles.resetButtonText,\n        children: \"Forgotton Password\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20\n  },\n  headerText: {\n    fontSize: 27,\n    fontWeight: \"500\",\n    marginBottom: 20\n  },\n  subTitle: {\n    color: \"#848282\",\n    marginBottom: 50,\n    textAlign: \"center\"\n  },\n  input: {\n    width: \"100%\",\n    height: 50,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginButton: 10\n  },\n  inputError: {\n    borderColor: \"red\"\n  },\n  forgottenButton: {\n    borderRadius: 32,\n    width: \"100%\",\n    marginTop: 25,\n    padding: 20,\n    backgroundColor: \"F29F05\"\n  },\n  resetButtonText: {\n    fontSize: 16,\n    textAlign: \"center\",\n    color: \"fff\"\n  }\n});\nvar connector = connect(null, {\n  login: login\n});\nexport default connector(ForgottenPasswordScreen);","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","connect","login","jsx","_jsx","jsxs","_jsxs","ForgottenPasswordScreen","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","usernameError","setUsernameError","handleForgettonPassword","console","log","style","styles","container","children","headerText","subTitle","input","inputError","placeholder","value","onChangeText","text","forgottenButton","onPress","resetButtonText","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","marginBottom","color","textAlign","width","height","borderWidth","borderColor","borderRadius","paddingHorizontal","marginButton","marginTop","backgroundColor","connector"],"sources":["/Users/rodwellshibambu/Documents/resapp/Fudu App/src/screen/accounts/ForgottenPassword.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  Switch,\n  StyleSheet,\n  ActivityIndicator,\n} from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../../../redux/Actions/auth.Actions\";\nimport { ILogin } from \"../../../core/login\";\n\nconst ForgottenPasswordScreen=() =>{\nconst [username, setUsername] =useState<string>(\"\");\nconst [usernameError,setUsernameError] =useState(false);\n\nconst handleForgettonPassword =() => {\n    // validation logic\n    if(username ===\"\"){\n        setUsernameError(true);\n        return;\n    }\n    //Perform reset password logic here\n    console.log(\"send email to :\",username);\n\n};\n\nreturn (\n    <View style={styles.container}> \n<Text style ={styles.headerText}> Forgotten Password </Text>\n<Text style ={styles.subTitle}>Enter your username to reset your password</Text>\n\n<TextInput\n   style={[styles.input, usernameError ? styles.inputError : null]}\n   placeholder=\"Username\"\n   value ={username}\n   onChangeText={(text) => {\n    setUsername(text);\n    setUsernameError(false);\n   }}\n\n   />\n   <TouchableOpacity style={styles.forgottenButton} onPress={handleForgettonPassword}>\n<Text style={styles.resetButtonText}>Forgotton Password</Text>\n\n   </TouchableOpacity>\n    </View>\n);\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      padding: 20,\n    },\n    headerText: {\n        fontSize: 27,\n        fontWeight: \"500\",\n        marginBottom: 20,\n    },\n    subTitle: {\n        color: \"#848282\",\n        marginBottom: 50,\n        textAlign: \"center\",\n    },\n    input: {\n        width: \"100%\",\n        height: 50,\n        borderWidth: 1,\n        borderColor : \"#ccc\",\n        borderRadius: 5,\n        paddingHorizontal: 10,\n        marginButton: 10,\n    \n    },\n    inputError: {\n        borderColor: \"red\",\n    },\n    forgottenButton: {\n        borderRadius: 32,\n        width : \"100%\",\n        marginTop: 25,\n        padding: 20,\n        backgroundColor : \"F29F05\",\n    },\n    resetButtonText: {\n        fontSize:16,\n        textAlign:\"center\",\n        color: \"fff\",\n    }\n});\n\nconst connector = connect(null, { login });\n\nexport default connector(ForgottenPasswordScreen);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
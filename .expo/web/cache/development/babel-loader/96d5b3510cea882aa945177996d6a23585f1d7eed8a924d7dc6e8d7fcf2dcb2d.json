{"ast":null,"code":"import axios from \"axios\";\nvar ongoingRequests = 0;\nvar instance = axios.create({\n  baseURL: \"https://apidashaboarddev.azurewebsites.net/api/\"\n});\nvar getToken = function getToken() {\n  return localStorage.getItem(\"accessToken\");\n};\nvar displayGlobalError = function displayGlobalError(messageText) {};\nvar displayGlobalSuccess = function displayGlobalSuccess(messageText) {};\ninstance.interceptors.request.use(function (config) {\n  var token = getToken();\n  if (token) {\n    config.headers.Authorization = \"Bearer \" + token;\n  }\n  if (ongoingRequests === 0) {}\n  ongoingRequests++;\n  return config;\n}, function (error) {\n  var _error$response, _error$response$data;\n  ongoingRequests--;\n  displayGlobalError(\"Request Error: \" + ((_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message));\n  return Promise.reject(error);\n});\ninstance.interceptors.response.use(function (response) {\n  var _response$config$meth;\n  ongoingRequests--;\n  if (((_response$config$meth = response.config.method) == null ? void 0 : _response$config$meth.toUpperCase()) === \"POST\" && response.status >= 200 && response.status < 300) {\n    displayGlobalSuccess(\"POST Request Successful!\");\n  }\n  return response;\n}, function (error) {\n  var _error$response2, _error$response2$data;\n  ongoingRequests--;\n  displayGlobalError(\"Response Error: \" + ((_error$response2 = error.response) == null ? void 0 : (_error$response2$data = _error$response2.data) == null ? void 0 : _error$response2$data.message));\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","ongoingRequests","instance","create","baseURL","getToken","localStorage","getItem","displayGlobalError","messageText","displayGlobalSuccess","interceptors","request","use","config","token","headers","Authorization","error","_error$response","_error$response$data","response","data","message","Promise","reject","_response$config$meth","method","toUpperCase","status","_error$response2","_error$response2$data"],"sources":["/Users/rodwellshibambu/Documents/resapp/Fudu App/axios/axios-instance.ts"],"sourcesContent":["import axios, { AxiosInstance } from \"axios\";\n\nlet ongoingRequests = 0;\n\nconst instance: AxiosInstance = axios.create({\n  baseURL: \"https://apidashaboarddev.azurewebsites.net/api/\",\n});\n\nconst getToken = () => {\n  return localStorage.getItem(\"accessToken\");\n};\n\nconst displayGlobalError = (messageText: string) => {};\n\nconst displayGlobalSuccess = (messageText: string) => {};\n\ninstance.interceptors.request.use(\n  (config: any) => {\n    const token = getToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n\n    if (ongoingRequests === 0) {\n      // Show loading spinner or perform other actions\n    }\n\n    ongoingRequests++;\n\n    return config;\n  },\n  (error: any) => {\n    ongoingRequests--;\n    displayGlobalError(\"Request Error: \" + error.response?.data?.message);\n    return Promise.reject(error);\n  }\n);\n\ninstance.interceptors.response.use(\n  (response) => {\n    ongoingRequests--;\n\n    if (\n      response.config.method?.toUpperCase() === \"POST\" &&\n      response.status >= 200 &&\n      response.status < 300\n    ) {\n      displayGlobalSuccess(\"POST Request Successful!\");\n    }\n\n    return response;\n  },\n  (error) => {\n    ongoingRequests--;\n\n    displayGlobalError(\"Response Error: \" + error.response?.data?.message);\n\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAyB,OAAO;AAE5C,IAAIC,eAAe,GAAG,CAAC;AAEvB,IAAMC,QAAuB,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC3CC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EACrB,OAAOC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;AAC5C,CAAC;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,WAAmB,EAAK,CAAC,CAAC;AAEtD,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAID,WAAmB,EAAK,CAAC,CAAC;AAExDP,QAAQ,CAACS,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/B,UAACC,MAAW,EAAK;EACf,IAAMC,KAAK,GAAGV,QAAQ,CAAC,CAAC;EACxB,IAAIU,KAAK,EAAE;IACTD,MAAM,CAACE,OAAO,CAACC,aAAa,eAAaF,KAAO;EAClD;EAEA,IAAId,eAAe,KAAK,CAAC,EAAE,CAE3B;EAEAA,eAAe,EAAE;EAEjB,OAAOa,MAAM;AACf,CAAC,EACD,UAACI,KAAU,EAAK;EAAA,IAAAC,eAAA,EAAAC,oBAAA;EACdnB,eAAe,EAAE;EACjBO,kBAAkB,CAAC,iBAAiB,KAAAW,eAAA,GAAGD,KAAK,CAACG,QAAQ,sBAAAD,oBAAA,GAAdD,eAAA,CAAgBG,IAAI,qBAApBF,oBAAA,CAAsBG,OAAO,EAAC;EACrE,OAAOC,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDhB,QAAQ,CAACS,YAAY,CAACU,QAAQ,CAACR,GAAG,CAChC,UAACQ,QAAQ,EAAK;EAAA,IAAAK,qBAAA;EACZzB,eAAe,EAAE;EAEjB,IACE,EAAAyB,qBAAA,GAAAL,QAAQ,CAACP,MAAM,CAACa,MAAM,qBAAtBD,qBAAA,CAAwBE,WAAW,CAAC,CAAC,MAAK,MAAM,IAChDP,QAAQ,CAACQ,MAAM,IAAI,GAAG,IACtBR,QAAQ,CAACQ,MAAM,GAAG,GAAG,EACrB;IACAnB,oBAAoB,CAAC,0BAA0B,CAAC;EAClD;EAEA,OAAOW,QAAQ;AACjB,CAAC,EACD,UAACH,KAAK,EAAK;EAAA,IAAAY,gBAAA,EAAAC,qBAAA;EACT9B,eAAe,EAAE;EAEjBO,kBAAkB,CAAC,kBAAkB,KAAAsB,gBAAA,GAAGZ,KAAK,CAACG,QAAQ,sBAAAU,qBAAA,GAAdD,gBAAA,CAAgBR,IAAI,qBAApBS,qBAAA,CAAsBR,OAAO,EAAC;EAEtE,OAAOC,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAehB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
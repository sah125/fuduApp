{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport instance from \"../../axios/axios-instance\";\nimport { FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAILURE } from \"./authTypes\";\nexport var forgotPassowrdRequest = function forgotPassowrdRequest() {\n  return {\n    type: FORGOT_PASSWORD_REQUEST\n  };\n};\nexport var forgotPasswordSuccess = function forgotPasswordSuccess() {\n  return {\n    type: FORGOT_PASSWORD_SUCCESS\n  };\n};\nexport var forgotPasswordFailure = function forgotPasswordFailure(error) {\n  return {\n    type: FORGOT_PASSWORD_FAILURE,\n    Payload: error\n  };\n};\nexport var forgotPassword = function forgotPassword(email) {\n  return function () {\n    var _ref = _asyncToGenerator(function* (dispatch) {\n      dispatch(forgotPassowrdRequest);\n      try {\n        yield instance.post(\"Auth/forgotPassword\", {\n          email: email\n        });\n        dispatch(forgotPasswordSuccess);\n      } catch (error) {}\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var loginRequest = function loginRequest(credentials) {\n  return {\n    type: \"LOGIN_REQUEST\",\n    payload: credentials\n  };\n};\nexport var loginSuccess = function loginSuccess(user) {\n  return {\n    type: \"LOGIN_SUCCESS\",\n    payload: {\n      user: user\n    }\n  };\n};\nexport var loginFailure = function loginFailure(error) {\n  return {\n    type: \"LOGIN_FAILURE\",\n    payload: {\n      error: error\n    }\n  };\n};\nexport var login = function login(credentials) {\n  return function () {\n    var _ref2 = _asyncToGenerator(function* (dispatch) {\n      dispatch(loginRequest(credentials));\n      try {\n        var response = yield instance.post(\"/Auth/login\", credentials);\n        var user = response.data;\n        dispatch(loginSuccess(user));\n      } catch (error) {\n        console.log(error.message);\n        dispatch(loginFailure(error.message));\n      }\n    });\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"names":["instance","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILURE","forgotPassowrdRequest","type","forgotPasswordSuccess","forgotPasswordFailure","error","Payload","forgotPassword","email","_ref","_asyncToGenerator","dispatch","post","_x","apply","arguments","loginRequest","credentials","payload","loginSuccess","user","loginFailure","login","_ref2","response","data","console","log","message","_x2"],"sources":["/Users/rodwellshibambu/Documents/resapp/Fudu App/redux/Actions/auth.Actions.ts"],"sourcesContent":["import { Action } from \"redux\";\nimport { ILogin } from \"../../core/login\";\nimport { ThunkAction } from \"redux-thunk\";\nimport axios from \"axios\";\nimport instance from \"../../axios/axios-instance\";\nimport {\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_FAILURE,\n} from './authTypes';\n\nexport const forgotPassowrdRequest = () => {\n  return {\n    type: FORGOT_PASSWORD_REQUEST,\n  };\n};\n\nexport const forgotPasswordSuccess =() => {\n  return {\n    type: FORGOT_PASSWORD_SUCCESS,\n  };\n};\nexport const forgotPasswordFailure =(error : string) => {\n  return {\n    type: FORGOT_PASSWORD_FAILURE,\n    Payload: error,\n  };\n};\n\nexport const forgotPassword = (\n email :string\n  \n): ThunkAction<void, any, unknown, AuthAction> => {\n\n  return async (dispatch) => {\n    dispatch(forgotPassowrdRequest);\n    try{\n      await instance.post(\"Auth/forgotPassword\",{email});\n      dispatch(forgotPasswordSuccess);\n    } catch(error: any) {\n      //dispatch(forgotPasswordFailure(error.message));\n    }\n  };\n};\n\nexport interface LoginRequestAction extends Action<\"LOGIN_REQUEST\"> {\n  payload: ILogin;\n}\n\nexport interface LoginSuccessAction extends Action<\"LOGIN_SUCCESS\"> {\n  payload: {\n    user: any;\n  };\n}\n\nexport interface LoginFailureAction extends Action<\"LOGIN_FAILURE\"> {\n  payload: {\n    error: string;\n  };\n}\n\n\n\nexport type AuthAction =\n  | LoginRequestAction\n  | LoginSuccessAction\n  | LoginFailureAction;\n\n \n\n\nexport const loginRequest = (credentials: ILogin): LoginRequestAction => ({\n  type: \"LOGIN_REQUEST\",\n  payload: credentials,\n});\n\nexport const loginSuccess = (user: any): LoginSuccessAction => ({\n  type: \"LOGIN_SUCCESS\",\n  payload: { user },\n});\n\nexport const loginFailure = (error: string): LoginFailureAction => ({\n  type: \"LOGIN_FAILURE\",\n  payload: { error },\n});\n\nexport const login = (\n  credentials: ILogin\n): ThunkAction<void, any, unknown, AuthAction> => {\n  return async (dispatch) => {\n    dispatch(loginRequest(credentials));\n    try {\n      // Make a POST request to your login API endpoint\n      const response = await instance.post(\"/Auth/login\", credentials);\n\n      // Assuming the API response contains the user data\n      const user: any = response.data;\n\n      dispatch(loginSuccess(user));\n    } catch (error: any) {\n      console.log(error.message)\n      dispatch(loginFailure(error.message));\n    }\n  };\n};\n"],"mappings":";AAIA,OAAOA,QAAQ;AACf,SACEC,uBAAuB,EACvBC,uBAAuB,EACvBC,uBAAuB;AAGzB,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;EACzC,OAAO;IACLC,IAAI,EAAEJ;EACR,CAAC;AACH,CAAC;AAED,OAAO,IAAMK,qBAAqB,GAAE,SAAvBA,qBAAqBA,CAAA,EAAQ;EACxC,OAAO;IACLD,IAAI,EAAEH;EACR,CAAC;AACH,CAAC;AACD,OAAO,IAAMK,qBAAqB,GAAE,SAAvBA,qBAAqBA,CAAGC,KAAc,EAAK;EACtD,OAAO;IACLH,IAAI,EAAEF,uBAAuB;IAC7BM,OAAO,EAAED;EACX,CAAC;AACH,CAAC;AAED,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAcA,CAC1BC,KAAa,EAEoC;EAEhD;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAO,WAAOC,QAAQ,EAAK;MACzBA,QAAQ,CAACV,qBAAqB,CAAC;MAC/B,IAAG;QACD,MAAMJ,QAAQ,CAACe,IAAI,CAAC,qBAAqB,EAAC;UAACJ,KAAK,EAALA;QAAK,CAAC,CAAC;QAClDG,QAAQ,CAACR,qBAAqB,CAAC;MACjC,CAAC,CAAC,OAAME,KAAU,EAAE,CAEpB;IACF,CAAC;IAAA,iBAAAQ,EAAA;MAAA,OAAAJ,IAAA,CAAAK,KAAA,OAAAC,SAAA;IAAA;EAAA;AACH,CAAC;AA4BD,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,WAAmB;EAAA,OAA0B;IACxEf,IAAI,EAAE,eAAe;IACrBgB,OAAO,EAAED;EACX,CAAC;AAAA,CAAC;AAEF,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAIC,IAAS;EAAA,OAA0B;IAC9DlB,IAAI,EAAE,eAAe;IACrBgB,OAAO,EAAE;MAAEE,IAAI,EAAJA;IAAK;EAClB,CAAC;AAAA,CAAC;AAEF,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIhB,KAAa;EAAA,OAA0B;IAClEH,IAAI,EAAE,eAAe;IACrBgB,OAAO,EAAE;MAAEb,KAAK,EAALA;IAAM;EACnB,CAAC;AAAA,CAAC;AAEF,OAAO,IAAMiB,KAAK,GAAG,SAARA,KAAKA,CAChBL,WAAmB,EAC6B;EAChD;IAAA,IAAAM,KAAA,GAAAb,iBAAA,CAAO,WAAOC,QAAQ,EAAK;MACzBA,QAAQ,CAACK,YAAY,CAACC,WAAW,CAAC,CAAC;MACnC,IAAI;QAEF,IAAMO,QAAQ,SAAS3B,QAAQ,CAACe,IAAI,CAAC,aAAa,EAAEK,WAAW,CAAC;QAGhE,IAAMG,IAAS,GAAGI,QAAQ,CAACC,IAAI;QAE/Bd,QAAQ,CAACQ,YAAY,CAACC,IAAI,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOf,KAAU,EAAE;QACnBqB,OAAO,CAACC,GAAG,CAACtB,KAAK,CAACuB,OAAO,CAAC;QAC1BjB,QAAQ,CAACU,YAAY,CAAChB,KAAK,CAACuB,OAAO,CAAC,CAAC;MACvC;IACF,CAAC;IAAA,iBAAAC,GAAA;MAAA,OAAAN,KAAA,CAAAT,KAAA,OAAAC,SAAA;IAAA;EAAA;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { resetPassword } from \"../../../redux/Actions/auth.Actions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ResetPasswordScreen = function ResetPasswordScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    confirmPassword = _useState4[0],\n    setConfirmPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    passwordError = _useState6[0],\n    setPasswordError = _useState6[1];\n  var handleResetPassword = function handleResetPassword() {\n    var dispatch = useDispatch();\n    if (password === \"\" || confirmPassword === \"\") {\n      setPasswordError(true);\n      return;\n    }\n    if (password !== confirmPassword) {\n      setPasswordError(true);\n      return;\n    }\n    dispatch(resetPassword(password, confirmPassword));\n    console.log(\"New password:\", password);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \"Reset Password\"\n    }), _jsx(Text, {\n      style: styles.subTitle,\n      children: \"Enter your new password\"\n    }), _jsx(TextInput, {\n      style: [styles.input, passwordError ? styles.inputError : null],\n      placeholder: \"New Password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        setPassword(text);\n        setPasswordError(false);\n      }\n    }), _jsx(TextInput, {\n      style: [styles.input, passwordError ? styles.inputError : null],\n      placeholder: \"Confirm Password\",\n      secureTextEntry: true,\n      value: confirmPassword,\n      onChangeText: function onChangeText(text) {\n        setConfirmPassword(text);\n        setPasswordError(false);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.resetButton,\n      onPress: handleResetPassword,\n      children: _jsx(Text, {\n        style: styles.resetButtonText,\n        children: \"Reset Password\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20\n  },\n  headerText: {\n    fontSize: 27,\n    fontWeight: \"500\",\n    marginBottom: 20\n  },\n  subTitle: {\n    color: \"#848282\",\n    marginBottom: 50,\n    textAlign: \"center\"\n  },\n  input: {\n    width: \"100%\",\n    height: 50,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 10\n  },\n  inputError: {\n    borderColor: \"red\"\n  },\n  resetButton: {\n    borderRadius: 32,\n    width: \"100%\",\n    marginTop: 25,\n    padding: 20,\n    backgroundColor: \"#F29F05\"\n  },\n  resetButtonText: {\n    fontSize: 16,\n    textAlign: \"center\",\n    color: \"#fff\"\n  }\n});\nvar connector = connect(null, {\n  resetPassword: resetPassword\n});\nexport default connector(ResetPasswordScreen);","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","connect","useDispatch","resetPassword","jsx","_jsx","jsxs","_jsxs","ResetPasswordScreen","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_useState5","_useState6","passwordError","setPasswordError","handleResetPassword","dispatch","console","log","style","styles","container","children","headerText","subTitle","input","inputError","placeholder","value","onChangeText","text","secureTextEntry","resetButton","onPress","resetButtonText","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","marginBottom","color","textAlign","width","height","borderWidth","borderColor","borderRadius","paddingHorizontal","marginTop","backgroundColor","connector"],"sources":["/Users/rodwellshibambu/Documents/resapp/Fudu App/src/screen/accounts/ResetPassword.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  Switch,\n  StyleSheet,\n  ActivityIndicator,\n} from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { login, resetPassword } from \"../../../redux/Actions/auth.Actions\";\nimport { ILogin } from \"../../../core/login\";\nimport { ThunkDispatch } from \"redux-thunk\";\n\nconst ResetPasswordScreen =() => {\n    const [password,setPassword] =useState<string>(\"\");\n    const [confirmPassword, setConfirmPassword] =useState<string>(\"\");\n    const [passwordError ,setPasswordError] =useState(false);\n\n    const handleResetPassword =() => {\n      const dispatch = useDispatch<ThunkDispatch<any, any, any>>();\n        //validation logic\n        if(password === \"\" || confirmPassword === \"\") {\n            setPasswordError(true);\n            return;\n        }\n       \n        if(password!== confirmPassword ){\n\n            setPasswordError(true);\n            return;\n        }\n        dispatch(resetPassword(password, confirmPassword));\n       // Perform password reset logic here\n       console.log(\"New password:\", password);\n    };\n return (\n\n    <View style={styles.container}>\n     <Text style ={styles.headerText}>Reset Password</Text>\n     <Text style={styles.subTitle}>Enter your new password</Text>\n\n     <TextInput\n       style={[styles.input, passwordError ? styles.inputError: null]}\n       placeholder=\"New Password\"\n       value={password}\n       onChangeText={(text) =>{\n        setPassword(text);\n        setPasswordError(false);\n\n       }}\n/>\n\n<TextInput\n style={[styles.input ,passwordError ? styles.inputError:null]}\n placeholder=\"Confirm Password\"\n secureTextEntry={true}\n value={confirmPassword}\n onChangeText={(text) => {\n   setConfirmPassword(text);\n   setPasswordError(false);\n }}\n/>\n<TouchableOpacity style={styles.resetButton} onPress={handleResetPassword}>\n        <Text style={styles.resetButtonText}>Reset Password</Text>\n      </TouchableOpacity>\n\n    </View>\n);\n};\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      padding: 20,\n    },\n    headerText: {\n      fontSize: 27,\n      fontWeight: \"500\",\n      marginBottom: 20,\n    },\n    subTitle: {\n      color: \"#848282\",\n      marginBottom: 50,\n      textAlign: \"center\",\n    },\n    input: {\n      width: \"100%\",\n      height: 50,\n      borderWidth: 1,\n      borderColor: \"#ccc\",\n      borderRadius: 5,\n      paddingHorizontal: 10,\n      marginBottom: 10,\n    },\n    inputError: {\n      borderColor: \"red\",\n    },\n    resetButton: {\n      borderRadius: 32,\n      width: \"100%\",\n      marginTop: 25,\n      padding: 20,\n      backgroundColor: \"#F29F05\",\n    },\n    resetButtonText: {\n      fontSize: 16,\n      textAlign: \"center\",\n      color: \"#fff\",\n    },\n  });\n\n  const connector = connect(null, { resetPassword });\n\nexport default connector(ResetPasswordScreen);\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { forgotPassword } from \"../../../redux/Actions/auth.Actions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ForgottenPasswordScreen = function ForgottenPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    emailError = _useState4[0],\n    setEmailError = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    resetPasswordSent = _useState6[0],\n    setResetPasswordSent = _useState6[1];\n  var _useSelector = useSelector(function (state) {\n      return state == null ? void 0 : state.auth;\n    }),\n    forgotPasswordLoading = _useSelector.forgotPasswordLoading,\n    error = _useSelector.error;\n  var handleForgettonPassword = function handleForgettonPassword() {\n    if (email === \"\") {\n      setEmailError(true);\n      return;\n    }\n    console.log(\"send email to :\", email);\n    dispatch(forgotPassword(email));\n    setResetPasswordSent(true);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.backIcon,\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      children: _jsxs(View, {\n        style: styles.backIconContainer,\n        children: [_jsx(Icon, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#2B0100\"\n        }), _jsx(Text, {\n          style: styles.backText,\n          children: \"Back\"\n        })]\n      })\n    }), _jsxs(TouchableOpacity, {\n      style: styles.containerHeader,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: \"Forgotten Password\"\n      }), _jsx(Text, {\n        style: styles.subTitile,\n        children: \"Reset your password\"\n      })]\n    }), _jsx(TextInput, {\n      style: [styles.input, emailError ? styles.inputError : null],\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        setEmail(text);\n        setEmailError(false);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.forgottenButton,\n      onPress: handleForgettonPassword,\n      children: forgotPasswordLoading ? _jsx(ActivityIndicator, {\n        color: \"white\",\n        size: \"small\"\n      }) : _jsx(Text, {\n        style: styles.forgottenButtonText,\n        children: \"Forgotten Password\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20\n  },\n  containerHeader: {\n    marginTop: 40\n  },\n  headerText: {\n    fontSize: 27,\n    fontWeight: \"500\",\n    marginBottom: 40\n  },\n  subTitle: {\n    color: \"#848282\",\n    marginBottom: 40,\n    textAlign: \"center\"\n  },\n  subTitile: {\n    color: \"#848282\",\n    marginBottom: 50,\n    textAlign: \"center\"\n  },\n  input: {\n    width: \"100%\",\n    height: 50,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginButton: 10\n  },\n  inputError: {\n    borderColor: \"red\"\n  },\n  forgottenButton: {\n    borderRadius: 32,\n    width: \"100%\",\n    marginTop: 25,\n    color: \"#2B0100\",\n    padding: 20,\n    backgroundColor: \"#F29F05\"\n  },\n  forgottenButtonText: {\n    fontSize: 16,\n    textAlign: \"center\"\n  },\n  backIconContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  backText: {\n    fontSize: 16,\n    color: \"#2B0100\",\n    marginLeft: 5\n  },\n  backIcon: {\n    position: \"absolute\",\n    top: 70,\n    left: 10\n  }\n});\nvar connector = connect(null, {\n  forgotPassword: forgotPassword\n});\nexport default connector(ForgottenPasswordScreen);","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","ActivityIndicator","Icon","connect","useDispatch","useSelector","forgotPassword","jsx","_jsx","jsxs","_jsxs","ForgottenPasswordScreen","_ref","navigation","dispatch","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","emailError","setEmailError","_useState5","_useState6","resetPasswordSent","setResetPasswordSent","_useSelector","state","auth","forgotPasswordLoading","error","handleForgettonPassword","console","log","style","styles","container","children","backIcon","onPress","navigate","backIconContainer","name","size","color","backText","containerHeader","headerText","subTitile","input","inputError","placeholder","value","onChangeText","text","forgottenButton","forgottenButtonText","create","flex","alignItems","justifyContent","padding","marginTop","fontSize","fontWeight","marginBottom","subTitle","textAlign","width","height","borderWidth","borderColor","borderRadius","paddingHorizontal","marginButton","backgroundColor","flexDirection","marginLeft","position","top","left","connector"],"sources":["/Users/rodwellshibambu/Documents/resapp/Fudu App/src/screen/accounts/ForgottenPassword.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  Switch,\n  StyleSheet,\n  ActivityIndicator,\n} from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { login ,forgotPassword} from \"../../../redux/Actions/auth.Actions\";\nimport { ILogin } from \"../../../core/login\";\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\n\ninterface ForgottenPasswordPageProps {\n  navigation: any; \n}\nconst ForgottenPasswordScreen: React.FC<ForgottenPasswordPageProps> = ({ navigation }) => {\n    const dispatch = useDispatch<ThunkDispatch<any, any, any>>();\n    const [email, setEmail] = useState<string>(\"\");\n    const [emailError, setEmailError] = useState(false);\n    const [resetPasswordSent, setResetPasswordSent] = useState(false); // State to track whether the reset password email has been sent\n    const { forgotPasswordLoading, error } = useSelector((state: any) => state?.auth);\n\n\nconst handleForgettonPassword =() => {\n    // validation logic\n    if (email === \"\") {\n        setEmailError(true);\n        return;\n      }\n    // sending of email\n    console.log(\"send email to :\",email);\n    dispatch(forgotPassword(email));\n    setResetPasswordSent(true);\n\n};\n\nreturn (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.backIcon} onPress={() => navigation.navigate('Login')}>\n        <View style={styles.backIconContainer}>\n          <Icon name=\"arrow-back\" size={24} color=\"#2B0100\"  />\n          <Text style={styles.backText}>Back</Text>\n        </View>\n      </TouchableOpacity>\n       <TouchableOpacity style={styles.containerHeader}>\n        <Text style={styles.headerText}>Forgotten Password</Text>\n        <Text style={styles.subTitile}>Reset your password</Text>\n      </TouchableOpacity>\n      \n      <TextInput\n        style={[styles.input, emailError ? styles.inputError : null]}\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={(text) => {\n          setEmail(text);\n          setEmailError(false);\n        }}\n      />\n      <TouchableOpacity style={styles.forgottenButton} onPress={handleForgettonPassword}>\n      {forgotPasswordLoading ? (\n        <ActivityIndicator color=\"white\" size=\"small\" />\n        ) : (\n        <Text style={styles.forgottenButtonText}>Forgotten Password</Text>\n        )}\n      </TouchableOpacity>\n    </View>\n  );\n};\n\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      padding: 20,\n    },\n    containerHeader: {\n      marginTop: 40,\n    },\n    headerText: {\n      fontSize: 27,\n      fontWeight: \"500\",\n      marginBottom: 40,\n    },\n    subTitle: {\n        color: \"#848282\",\n        marginBottom: 40,\n        textAlign: \"center\",\n    },\n    subTitile: {\n      color: \"#848282\",\n      marginBottom: 50,\n      textAlign: \"center\",\n    },\n    input: {\n        width: \"100%\",\n        height: 50,\n        borderWidth: 1,\n        borderColor : \"#ccc\",\n        borderRadius: 5,\n        paddingHorizontal: 10,\n        marginButton: 10,\n    \n    },\n    inputError: {\n        borderColor: \"red\",\n    },\n    forgottenButton: {\n      borderRadius: 32,\n      width: \"100%\",\n      marginTop: 25,\n      color: \"#2B0100\",\n      padding: 20,\n      backgroundColor: \"#F29F05\",\n    },\n    forgottenButtonText: {\n      fontSize: 16,\n      textAlign: \"center\",\n    },\n    backIconContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n    },\n    backText: {\n      fontSize: 16,\n      color: \"#2B0100\",\n      marginLeft: 5,\n    },\n    backIcon: {\n      position: \"absolute\",\n      top: 70,\n      left: 10,\n    },\n});\n\nconst connector = connect(null, { forgotPassword });\n\nexport default connector(ForgottenPasswordScreen);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
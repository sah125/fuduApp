{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar generateRandomCoordinate = function generateRandomCoordinate() {\n  var latitude = Math.random() * (MAX_LATITUDE - MIN_LATITUDE) + MIN_LATITUDE;\n  var longitude = Math.random() * (MAX_LONGITUDE - MIN_LONGITUDE) + MIN_LONGITUDE;\n  return {\n    latitude: latitude,\n    longitude: longitude\n  };\n};\nvar NearByScreen = function NearByScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchText = _useState2[0],\n    setSearchText = _useState2[1];\n  var markers = Array.from({\n    length: 6\n  }).map(function (_, index) {\n    return {\n      id: index,\n      coordinate: generateRandomCoordinate(),\n      title: \"Marker \" + (index + 1),\n      description: \"Description for Marker \" + (index + 1)\n    };\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.searchBar,\n      children: [_jsx(TextInput, {\n        style: styles.searchInput,\n        placeholder: \"Search...\",\n        value: searchText,\n        onChangeText: function onChangeText(text) {\n          return setSearchText(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.searchIcon,\n        children: _jsx(Icon, {\n          name: \"search\",\n          size: 20,\n          color: \"#333\"\n        })\n      })]\n    }), _jsx(MapView, {\n      style: styles.map,\n      initialRegion: {\n        latitude: INITIAL_LATITUDE,\n        longitude: INITIAL_LONGITUDE,\n        latitudeDelta: LATITUDE_DELTA,\n        longitudeDelta: LONGITUDE_DELTA\n      },\n      showsUserLocation: true,\n      children: markers.map(function (marker) {\n        return _jsx(Marker, {\n          coordinate: marker.coordinate,\n          title: marker.title,\n          description: marker.description\n        }, marker.id);\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.filterIcon,\n      children: _jsx(Icon, {\n        name: \"filter\",\n        size: 30,\n        color: \"#333\"\n      })\n    })]\n  });\n};\nvar INITIAL_LATITUDE = -30.5595;\nvar INITIAL_LONGITUDE = 22.9375;\nvar LATITUDE_DELTA = 10;\nvar LONGITUDE_DELTA = 10;\nvar MIN_LATITUDE = -35.0;\nvar MAX_LATITUDE = -22.0;\nvar MIN_LONGITUDE = 16.0;\nvar MAX_LONGITUDE = 33.0;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  map: {\n    flex: 1\n  },\n  searchBar: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: 10,\n    marginTop: 10\n  },\n  searchInput: {\n    flex: 1,\n    height: 40,\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10\n  },\n  searchIcon: {\n    marginLeft: 10\n  },\n  filterIcon: {\n    position: \"absolute\",\n    bottom: 20,\n    right: 20,\n    backgroundColor: \"#fff\",\n    borderRadius: 30,\n    padding: 10,\n    elevation: 5\n  }\n});\nexport default NearByScreen;","map":{"version":3,"names":["React","useState","View","StyleSheet","TextInput","TouchableOpacity","MapView","Marker","Icon","jsx","_jsx","jsxs","_jsxs","generateRandomCoordinate","latitude","Math","random","MAX_LATITUDE","MIN_LATITUDE","longitude","MAX_LONGITUDE","MIN_LONGITUDE","NearByScreen","_useState","_useState2","_slicedToArray","searchText","setSearchText","markers","Array","from","length","map","_","index","id","coordinate","title","description","style","styles","container","children","searchBar","searchInput","placeholder","value","onChangeText","text","searchIcon","name","size","color","initialRegion","INITIAL_LATITUDE","INITIAL_LONGITUDE","latitudeDelta","LATITUDE_DELTA","longitudeDelta","LONGITUDE_DELTA","showsUserLocation","marker","filterIcon","create","flex","flexDirection","alignItems","paddingHorizontal","marginTop","height","borderColor","borderWidth","borderRadius","marginLeft","position","bottom","right","backgroundColor","padding","elevation"],"sources":["C:/Users/Kwanda/dwhelper/Desktop/Project/Fudu%20App/src/screen/tabs/screens/NearByScreen.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity } from \"react-native\";\r\nimport MapView, { Marker } from \"react-native-maps\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\"; // Import Ionicons\r\n\r\nconst generateRandomCoordinate = () => {\r\n  // Generate random latitude and longitude within South Africa's range\r\n  const latitude = Math.random() * (MAX_LATITUDE - MIN_LATITUDE) + MIN_LATITUDE;\r\n  const longitude =\r\n    Math.random() * (MAX_LONGITUDE - MIN_LONGITUDE) + MIN_LONGITUDE;\r\n  return { latitude, longitude };\r\n};\r\n\r\nconst NearByScreen: React.FC = () => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const markers = Array.from({ length: 6 }).map((_, index) => ({\r\n    id: index,\r\n    coordinate: generateRandomCoordinate(),\r\n    title: `Marker ${index + 1}`,\r\n    description: `Description for Marker ${index + 1}`,\r\n  }));\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Search Bar */}\r\n      <View style={styles.searchBar}>\r\n        <TextInput\r\n          style={styles.searchInput}\r\n          placeholder=\"Search...\"\r\n          value={searchText}\r\n          onChangeText={(text) => setSearchText(text)}\r\n        />\r\n        <TouchableOpacity style={styles.searchIcon}>\r\n          <Icon name=\"search\" size={20} color=\"#333\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Map */}\r\n      <MapView\r\n        style={styles.map}\r\n        initialRegion={{\r\n          latitude: INITIAL_LATITUDE,\r\n          longitude: INITIAL_LONGITUDE,\r\n          latitudeDelta: LATITUDE_DELTA,\r\n          longitudeDelta: LONGITUDE_DELTA,\r\n        }}\r\n        showsUserLocation={true}\r\n      >\r\n        {/* Markers */}\r\n        {markers.map((marker) => (\r\n          <Marker\r\n            key={marker.id}\r\n            coordinate={marker.coordinate}\r\n            title={marker.title}\r\n            description={marker.description}\r\n          />\r\n        ))}\r\n      </MapView>\r\n\r\n      {/* Filter Icon */}\r\n      <TouchableOpacity style={styles.filterIcon}>\r\n        <Icon name=\"filter\" size={30} color=\"#333\" />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst INITIAL_LATITUDE = -30.5595;\r\nconst INITIAL_LONGITUDE = 22.9375;\r\nconst LATITUDE_DELTA = 10;\r\nconst LONGITUDE_DELTA = 10;\r\nconst MIN_LATITUDE = -35.0;\r\nconst MAX_LATITUDE = -22.0;\r\nconst MIN_LONGITUDE = 16.0;\r\nconst MAX_LONGITUDE = 33.0;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  map: {\r\n    flex: 1,\r\n  },\r\n  searchBar: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 10,\r\n    marginTop: 10,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderColor: \"#ccc\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    paddingHorizontal: 10,\r\n  },\r\n  searchIcon: {\r\n    marginLeft: 10,\r\n  },\r\n  filterIcon: {\r\n    position: \"absolute\",\r\n    bottom: 20,\r\n    right: 20,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 30,\r\n    padding: 10,\r\n    elevation: 5,\r\n  },\r\n});\r\n\r\nexport default NearByScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
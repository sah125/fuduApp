{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { login, forgotPassword } from \"../../../redux/Actions/auth.Actions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ForgottenPasswordScreen = function ForgottenPasswordScreen() {\n  var dispatch = useDispatch();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    emailError = _useState4[0],\n    setEmailError = _useState4[1];\n  var handleForgettonPassword = function handleForgettonPassword() {\n    if (email === \"\") {\n      setEmailError(true);\n      return;\n    }\n    console.log(\"send email to :\", email);\n    dispatch(forgotPassword(email));\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(TouchableOpacity, {\n      style: styles.containerHeader,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: \"Forgotten Password\"\n      }), _jsx(Text, {\n        style: styles.subTitile,\n        children: \"Login to your account\"\n      })]\n    }), _jsx(TextInput, {\n      style: [styles.input, emailError ? styles.inputError : null],\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        setEmail(text);\n        setEmailError(false);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.forgottenButton,\n      onPress: handleForgettonPassword,\n      children: _jsx(Text, {\n        style: styles.resetButtonText,\n        children: \"Forgotten Password\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20\n  },\n  containerHeader: {\n    marginTop: 40\n  },\n  headerText: {\n    fontSize: 27,\n    fontWeight: \"500\",\n    marginBottom: 40\n  },\n  subTitle: {\n    color: \"#848282\",\n    marginBottom: 50,\n    textAlign: \"center\"\n  },\n  subTitile: {\n    color: \"#848282\",\n    marginBottom: 50,\n    textAlign: \"center\"\n  },\n  input: {\n    width: \"100%\",\n    height: 50,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginButton: 10\n  },\n  inputError: {\n    borderColor: \"red\"\n  },\n  forgottenButton: {\n    borderRadius: 32,\n    width: \"100%\",\n    marginTop: 25,\n    padding: 20,\n    backgroundColor: \"F29F05\"\n  },\n  resetButtonText: {\n    fontSize: 16,\n    textAlign: \"center\",\n    color: \"fff\"\n  }\n});\nvar connector = connect(null, {\n  login: login\n});\nexport default connector(ForgottenPasswordScreen);","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","connect","useDispatch","login","forgotPassword","jsx","_jsx","jsxs","_jsxs","ForgottenPasswordScreen","dispatch","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","emailError","setEmailError","handleForgettonPassword","console","log","style","styles","container","children","containerHeader","headerText","subTitile","input","inputError","placeholder","value","onChangeText","text","forgottenButton","onPress","resetButtonText","create","flex","alignItems","justifyContent","padding","marginTop","fontSize","fontWeight","marginBottom","subTitle","color","textAlign","width","height","borderWidth","borderColor","borderRadius","paddingHorizontal","marginButton","backgroundColor","connector"],"sources":["/Users/rodwellshibambu/Documents/resapp/Fudu App/src/screen/accounts/ForgottenPassword.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  Switch,\n  StyleSheet,\n  ActivityIndicator,\n} from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { login ,forgotPassword} from \"../../../redux/Actions/auth.Actions\";\nimport { ILogin } from \"../../../core/login\";\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\n\n\nconst ForgottenPasswordScreen=() =>{\n    const dispatch = useDispatch<ThunkDispatch<any, any, any>>();\n    const [email, setEmail] = useState<string>(\"\");\n    const [emailError, setEmailError] = useState(false);\n\nconst handleForgettonPassword =() => {\n    // validation logic\n    if (email === \"\") {\n        setEmailError(true);\n        return;\n      }\n    //Perform reset password logic here\n    console.log(\"send email to :\",email);\n    dispatch(forgotPassword(email));\n\n};\n\nreturn (\n    <View style={styles.container}>\n       <TouchableOpacity style={styles.containerHeader}>\n        <Text style={styles.headerText}>Forgotten Password</Text>\n        <Text style={styles.subTitile}>Login to your account</Text>\n      </TouchableOpacity>\n      \n      <TextInput\n        style={[styles.input, emailError ? styles.inputError : null]}\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={(text) => {\n          setEmail(text);\n          setEmailError(false);\n        }}\n      />\n      <TouchableOpacity style={styles.forgottenButton} onPress={handleForgettonPassword}>\n        <Text style={styles.resetButtonText}>Forgotten Password</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      padding: 20,\n    },\n    containerHeader: {\n      marginTop: 40,\n    },\n    headerText: {\n      fontSize: 27,\n      fontWeight: \"500\",\n      marginBottom: 40,\n    },\n    subTitle: {\n        color: \"#848282\",\n        marginBottom: 50,\n        textAlign: \"center\",\n    },\n    subTitile: {\n      color: \"#848282\",\n      marginBottom: 50,\n      textAlign: \"center\",\n    },\n    input: {\n        width: \"100%\",\n        height: 50,\n        borderWidth: 1,\n        borderColor : \"#ccc\",\n        borderRadius: 5,\n        paddingHorizontal: 10,\n        marginButton: 10,\n    \n    },\n    inputError: {\n        borderColor: \"red\",\n    },\n    forgottenButton: {\n        borderRadius: 32,\n        width : \"100%\",\n        marginTop: 25,\n        padding: 20,\n        backgroundColor : \"F29F05\",\n    },\n    resetButtonText: {\n        fontSize:16,\n        textAlign:\"center\",\n        color: \"fff\",\n    }\n});\n\nconst connector = connect(null, { login });\n\nexport default connector(ForgottenPasswordScreen);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
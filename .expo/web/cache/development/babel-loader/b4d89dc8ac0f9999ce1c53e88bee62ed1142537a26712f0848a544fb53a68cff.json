{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { phoneVerification, resendOpt, resendOtpRequest, signin } from \"../../../redux/Actions/auth.Actions\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useRoute } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PhoneVerificationScreen = function PhoneVerificationScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([\"\", \"\", \"\", \"\", \"\", \"\"]),\n    _useState2 = _slicedToArray(_useState, 2),\n    verificationCode = _useState2[0],\n    setVerificationCode = _useState2[1];\n  var codeInputs = Array.from({\n    length: 6\n  }, function () {\n    return useRef(null);\n  });\n  var _useState3 = useState(60),\n    _useState4 = _slicedToArray(_useState3, 2),\n    timer = _useState4[0],\n    setTimer = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    redirected = _useState6[0],\n    setRedirected = _useState6[1];\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state == null ? void 0 : state.auth;\n    }),\n    user = _useSelector.user,\n    error = _useSelector.error,\n    isResendOpt = _useSelector.isResendOpt;\n  var route = useRoute();\n  var _ref2 = route.params,\n    signupData = _ref2.signupData;\n  useEffect(function () {\n    if (timer > 0 && !redirected) {\n      var countdown = setInterval(function () {\n        setTimer(function (prevTimer) {\n          return prevTimer - 1;\n        });\n      }, 1000);\n      return function () {\n        return clearInterval(countdown);\n      };\n    } else if (timer === 0 && !redirected) {\n      setRedirected(true);\n    }\n  }, [timer, redirected]);\n  var handleInput = function () {\n    var _ref3 = _asyncToGenerator(function* (index, value) {\n      setVerificationCode(function (prevCode) {\n        var newCode = _toConsumableArray(prevCode);\n        newCode[index] = value;\n        if (index < 5 && value !== \"\") {\n          var nextInput = codeInputs[index + 1].current;\n          if (nextInput) {\n            nextInput.focus();\n          }\n        } else if (index === 5 && value !== \"\") {\n          var enteredCode = newCode.join(\"\");\n          phoneVerificationNumber(enteredCode);\n        }\n        return newCode;\n      });\n    });\n    return function handleInput(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleResendOTP = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        if (signupData) {\n          yield dispatch(resendOtpRequest(signupData));\n          yield dispatch(resendOpt(signupData));\n        } else {\n          console.error(\"signupData is undefined\");\n        }\n      } catch (error) {\n        console.error(\"Error resending OTP:\", error);\n      }\n      setTimer(60);\n    });\n    return function handleResendOTP() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var getCurrentLocation = function getCurrentLocation() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var _position$coords = position.coords,\n          latitude = _position$coords.latitude,\n          longitude = _position$coords.longitude;\n        console.log(\"Latitude: \" + latitude + \", Longitude: \" + longitude);\n      }, function (error) {\n        return console.error(error);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 20000,\n        maximumAge: 1000\n      });\n    } else {\n      console.log('Geolocation is not available in this browser/environment.');\n    }\n  };\n  var phoneVerificationNumber = function () {\n    var _ref5 = _asyncToGenerator(function* (enteredCode) {\n      try {\n        var response = yield dispatch(phoneVerification(enteredCode));\n        if (response.type === \"SIGNUP_SUCCESS\") {\n          var model = {\n            email: user.email,\n            password: user.password\n          };\n          var loginresponse = yield dispatch(signin(model));\n          console.log(\"Login Response:\", loginresponse);\n          if (loginresponse && loginresponse.type === \"LOGIN_SUCCESS\") {\n            var _loginresponse$payloa, _loginresponse$payloa2;\n            var accessToken = (_loginresponse$payloa = loginresponse.payload) == null ? void 0 : (_loginresponse$payloa2 = _loginresponse$payloa.user) == null ? void 0 : _loginresponse$payloa2.token;\n            console.log(\"Access Token:\", accessToken);\n            if (accessToken) {\n              yield AsyncStorage.setItem(\"accessToken\", accessToken);\n              getCurrentLocation();\n              navigation.navigate(\"Tabs\");\n              console.log(\"Successfully Login and navigated to Tabs\");\n            } else {\n              getCurrentLocation();\n              console.error(\"Access token is undefined\");\n            }\n          }\n        } else {\n          Alert.alert(\"Message\", error, [{\n            text: \"Cancel\",\n            onPress: function onPress() {\n              return console.log(\"Cancel Pressed\");\n            },\n            style: \"cancel\"\n          }, {\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }], {\n            cancelable: false\n          });\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function phoneVerificationNumber(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.backIcon,\n      children: _jsxs(View, {\n        style: styles.backIconContainer,\n        children: [_jsx(Icon, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#2B0100\"\n        }), _jsx(Text, {\n          style: styles.backText,\n          children: \"Back\"\n        })]\n      })\n    }), _jsx(Text, {\n      style: styles.headerText,\n      children: \"Phone Verification\"\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Image, {\n        source: require(\"../../../assets/logo/verification.png\"),\n        style: styles.image\n      })\n    }), _jsxs(Text, {\n      style: styles.subText,\n      children: [\"Enter the OTP sent to\", \" \", _jsx(Text, {\n        style: styles.phoneText,\n        children: user == null ? void 0 : user.phone\n      })]\n    }), _jsx(View, {\n      style: styles.codeInputContainer,\n      children: codeInputs.map(function (ref, index) {\n        return _jsx(TextInput, {\n          ref: ref,\n          style: [styles.codeInput, index === 0 ? null : styles.spaceBetween, styles.borderBottom],\n          value: verificationCode[index],\n          onChangeText: function onChangeText(value) {\n            return handleInput(index, value);\n          },\n          keyboardType: \"number-pad\",\n          maxLength: 1\n        }, index);\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.verify,\n      onPress: handleResendOTP,\n      children: _jsx(Text, {\n        style: styles.verifyButtonText,\n        children: timer === 0 ? \"Resend OTP\" : \"Resend OTP in \" + timer + \" seconds\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20\n  },\n  phoneText: {\n    fontWeight: \"700\"\n  },\n  image: {\n    marginBottom: 50\n  },\n  backIcon: {\n    position: \"absolute\",\n    top: 70,\n    left: 10\n  },\n  backIconContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  backText: {\n    fontSize: 16,\n    color: \"#2B0100\",\n    marginLeft: 5\n  },\n  headerText: {\n    fontSize: 27,\n    fontWeight: \"500\",\n    marginBottom: 20\n  },\n  subText: {\n    color: \"#848282\",\n    marginBottom: 30,\n    textAlign: \"center\"\n  },\n  codeInputContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    paddingHorizontal: 20\n  },\n  codeInput: {\n    flex: 1,\n    height: 50,\n    paddingHorizontal: 10,\n    textAlign: \"center\"\n  },\n  borderBottom: {\n    borderBottomWidth: 1,\n    borderColor: \"#ccc\"\n  },\n  spaceBetween: {\n    marginLeft: 10\n  },\n  verify: {\n    marginTop: 30\n  },\n  resendOpt: {\n    color: \"#F29F05\"\n  },\n  verifyButtonText: {\n    color: \"#777777\"\n  }\n});\nexport default PhoneVerificationScreen;","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","Image","Alert","Icon","useDispatch","useSelector","phoneVerification","resendOpt","resendOtpRequest","signin","AsyncStorage","useRoute","jsx","_jsx","jsxs","_jsxs","PhoneVerificationScreen","_ref","navigation","_useState","_useState2","_slicedToArray","verificationCode","setVerificationCode","codeInputs","Array","from","length","_useState3","_useState4","timer","setTimer","_useState5","_useState6","redirected","setRedirected","dispatch","_useSelector","state","auth","user","error","isResendOpt","route","_ref2","params","signupData","countdown","setInterval","prevTimer","clearInterval","handleInput","_ref3","_asyncToGenerator","index","value","prevCode","newCode","_toConsumableArray","nextInput","current","focus","enteredCode","join","phoneVerificationNumber","_x","_x2","apply","arguments","handleResendOTP","_ref4","console","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","latitude","longitude","log","enableHighAccuracy","timeout","maximumAge","_ref5","response","type","model","email","password","loginresponse","_loginresponse$payloa","_loginresponse$payloa2","accessToken","payload","token","setItem","navigate","alert","text","onPress","style","cancelable","_x3","styles","container","children","backIcon","backIconContainer","name","size","color","backText","headerText","source","require","image","subText","phoneText","phone","codeInputContainer","map","ref","codeInput","spaceBetween","borderBottom","onChangeText","keyboardType","maxLength","verify","verifyButtonText","create","flex","alignItems","justifyContent","padding","fontWeight","marginBottom","top","left","flexDirection","fontSize","marginLeft","textAlign","width","paddingHorizontal","height","borderBottomWidth","borderColor","marginTop"],"sources":["C:/Users/Kwanda/dwhelper/Desktop/Project/Fudu%20App/src/screen/accounts/PhoneVerication.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Image,\r\n  Alert,\r\n \r\n} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AnyAction } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { phoneVerification, resendOpt, resendOtpRequest, signin } from \"../../../redux/Actions/auth.Actions\";\r\nimport { ILogin } from \"../../../core/login\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { Platform } from 'react-native';\r\nimport Geolocation from '@react-native-community/geolocation';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { ISignup } from \"../../../core/signup\";\r\n\r\n\r\n\r\n\r\ninterface phoneVerificationProps {\r\n  navigation: any;\r\n}\r\n\r\ntype AppDispatch = ThunkDispatch<any, unknown, AnyAction>;\r\nconst PhoneVerificationScreen: React.FC<phoneVerificationProps> = ({\r\n  navigation,\r\n}) => {\r\n  const [verificationCode, setVerificationCode] = useState([\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n  ]);\r\n  \r\n\r\n  const codeInputs = Array.from({ length: 6 }, () => useRef(null));\r\n  const [timer, setTimer] = useState(60); // Initial timer value in seconds\r\n  const [redirected, setRedirected] = useState(false);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { user, error,isResendOpt } = useSelector((state: any) => state?.auth);\r\n  \r\n  const route = useRoute();\r\n  const { signupData } = route.params as { signupData: ISignup | undefined };\r\n\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    if (timer > 0 && !redirected) {\r\n      const countdown = setInterval(() => {\r\n        setTimer((prevTimer) => prevTimer - 1);\r\n      }, 1000);\r\n\r\n      return () => clearInterval(countdown);\r\n    } else if (timer === 0 && !redirected) {\r\n      setRedirected(true);\r\n    }\r\n  }, [timer, redirected]);\r\n\r\n  const handleInput = async (index: number, value: string) => {\r\n    setVerificationCode((prevCode) => {\r\n      const newCode = [...prevCode];\r\n      newCode[index] = value;\r\n\r\n      if (index < 5 && value !== \"\") {\r\n        const nextInput = codeInputs[index + 1].current;\r\n        if (nextInput) {\r\n          (nextInput as any).focus();\r\n        }\r\n      } else if (index === 5 && value !== \"\") {\r\n        const enteredCode = newCode.join(\"\");\r\n        phoneVerificationNumber(enteredCode);\r\n      }\r\n\r\n      return newCode;\r\n    });\r\n  };\r\n  \r\n  const handleResendOTP = async () => {\r\n    try {\r\n      if (signupData) {\r\n        // Only dispatch the action if signupData is defined\r\n        await dispatch(resendOtpRequest(signupData));\r\n        await dispatch(resendOpt(signupData));\r\n      } else {\r\n        console.error(\"signupData is undefined\");\r\n        // Handle the case where signupData is undefined\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error resending OTP:\", error);\r\n    }\r\n    // Reset the timer to 60 seconds\r\n    setTimer(60);\r\n  };\r\n  \r\n  const getCurrentLocation = () => {\r\n    if ('geolocation' in navigator) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          console.log(`Latitude: ${latitude}, Longitude: ${longitude}`);\r\n          // Here, you can do whatever you want with the latitude and longitude.\r\n        },\r\n        (error) => console.error(error),\r\n        { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\r\n      );\r\n    } else {\r\n      console.log('Geolocation is not available in this browser/environment.');\r\n    }\r\n  };\r\n  \r\n\r\n  const phoneVerificationNumber = async (enteredCode: string) => {\r\n    try {\r\n      const response = await dispatch(phoneVerification(enteredCode));\r\n\r\n      if (response.type === \"SIGNUP_SUCCESS\") {\r\n        const model: ILogin = {\r\n          email: user.email,\r\n          password: user.password,\r\n        };\r\n        const loginresponse = await dispatch(signin(model));\r\n        console.log(\"Login Response:\", loginresponse);\r\n\r\n        if (loginresponse && loginresponse.type === \"LOGIN_SUCCESS\") {\r\n          // Access the access token from the response\r\n          const accessToken = loginresponse.payload?.user?.token;\r\n          console.log(\"Access Token:\", accessToken);\r\n  \r\n          if (accessToken) {\r\n            // If the access token is defined,\r\n            // store it in AsyncStorage\r\n            await AsyncStorage.setItem(\"accessToken\", accessToken);\r\n  \r\n            // Get the user's current location\r\n            getCurrentLocation();\r\n  \r\n            navigation.navigate(\"Tabs\"); // Assuming this is your next screen\r\n            console.log(\"Successfully Login and navigated to Tabs\");\r\n          } else {\r\n            // Handle the case where the access token is undefined\r\n            // Get the user's current location\r\n            getCurrentLocation();\r\n            console.error(\"Access token is undefined\");\r\n          }\r\n  \r\n        }\r\n      } else {\r\n        Alert.alert(\r\n          \"Message\",\r\n          error,\r\n          [\r\n            {\r\n              text: \"Cancel\",\r\n              onPress: () => console.log(\"Cancel Pressed\"),\r\n              style: \"cancel\",\r\n            },\r\n            { text: \"OK\", onPress: () => console.log(\"OK Pressed\") },\r\n          ],\r\n          { cancelable: false }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      // Handle any errors that occurred during dispatch\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity style={styles.backIcon}>\r\n        <View style={styles.backIconContainer}>\r\n          <Icon name=\"arrow-back\" size={24} color=\"#2B0100\" />\r\n          <Text style={styles.backText}>Back</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n      <Text style={styles.headerText}>Phone Verification</Text>\r\n      <TouchableOpacity>\r\n        <Image\r\n          source={require(\"../../../assets/logo/verification.png\")}\r\n          style={styles.image}\r\n        />\r\n      </TouchableOpacity>\r\n\r\n      <Text style={styles.subText}>\r\n        Enter the OTP sent to{\" \"}\r\n        <Text style={styles.phoneText}>{user?.phone}</Text>\r\n      </Text>\r\n      <View style={styles.codeInputContainer}>\r\n        {codeInputs.map((ref, index) => (\r\n          <TextInput\r\n            key={index}\r\n            ref={ref}\r\n            style={[\r\n              styles.codeInput,\r\n              index === 0 ? null : styles.spaceBetween,\r\n              styles.borderBottom,\r\n            ]}\r\n            value={verificationCode[index]}\r\n            onChangeText={(value) => handleInput(index, value)}\r\n            keyboardType=\"number-pad\"\r\n            maxLength={1}\r\n          />\r\n        ))}\r\n      </View>\r\n      <TouchableOpacity style={styles.verify} onPress={handleResendOTP} >\r\n        <Text style={styles.verifyButtonText}>\r\n          {timer === 0 ? \"Resend OTP\" : `Resend OTP in ${timer} seconds`}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n  },\r\n  phoneText: {\r\n    fontWeight: \"700\",\r\n  },\r\n  image: {\r\n    marginBottom: 50,\r\n  },\r\n  backIcon: {\r\n    position: \"absolute\",\r\n    top: 70,\r\n    left: 10,\r\n  },\r\n  backIconContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  backText: {\r\n    fontSize: 16,\r\n    color: \"#2B0100\",\r\n    marginLeft: 5,\r\n  },\r\n  headerText: {\r\n    fontSize: 27,\r\n    fontWeight: \"500\",\r\n    marginBottom: 20,\r\n  },\r\n  subText: {\r\n    color: \"#848282\",\r\n    marginBottom: 30,\r\n    textAlign: \"center\",\r\n  },\r\n  codeInputContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    paddingHorizontal: 20,\r\n  },\r\n  codeInput: {\r\n    flex: 1,\r\n    height: 50,\r\n    paddingHorizontal: 10,\r\n    textAlign: \"center\",\r\n  },\r\n  borderBottom: {\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#ccc\",\r\n  },\r\n  spaceBetween: {\r\n    marginLeft: 10,\r\n  },\r\n  verify: {\r\n    marginTop: 30,\r\n  },\r\n  resendOpt: {\r\n    color: \"#F29F05\",\r\n  },\r\n  verifyButtonText: {\r\n    color: \"#777777\",\r\n  },\r\n});\r\n\r\nexport default PhoneVerificationScreen;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}